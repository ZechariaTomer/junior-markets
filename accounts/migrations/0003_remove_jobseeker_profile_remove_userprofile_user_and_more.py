# Generated by Django 5.1.2 on 2025-09-29 10:35

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0002_userprofile_jobseeker_hr_delete_profile'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='jobseeker',
            name='profile',
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='user',
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='אימייל')),
                ('role', models.CharField(choices=[('NONE', 'לא נבחר'), ('SEEKER', 'מחפש עבודה'), ('RECRUITER', 'מגייס')], default='NONE', max_length=16, verbose_name='תפקיד')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='RecruiterProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_name', models.CharField(blank=True, max_length=120, verbose_name='שם איש קשר')),
                ('phone', models.CharField(blank=True, max_length=30, validators=[django.core.validators.RegexValidator(message='מספר טלפון לא תקין', regex='^[0-9+\\-() ]{7,20}$')], verbose_name='טלפון')),
                ('company_name', models.CharField(blank=True, max_length=160, verbose_name='שם חברה')),
                ('company_website', models.URLField(blank=True, validators=[django.core.validators.URLValidator()], verbose_name='אתר חברה')),
                ('company_size', models.CharField(blank=True, max_length=80, verbose_name='גודל חברה (טקסט חופשי)')),
                ('company_location', models.CharField(blank=True, max_length=120, verbose_name='מיקום חברה')),
                ('company_logo', models.ImageField(blank=True, null=True, upload_to='company_logos/', verbose_name='לוגו חברה')),
                ('about_company', models.TextField(blank=True, verbose_name='אודות החברה')),
                ('notes', models.TextField(blank=True, verbose_name='העדפות/הערות גיוס')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='recruiter_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SeekerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=120, verbose_name='שם מלא')),
                ('phone', models.CharField(blank=True, max_length=30, validators=[django.core.validators.RegexValidator(message='מספר טלפון לא תקין', regex='^[0-9+\\-() ]{7,20}$')], verbose_name='טלפון')),
                ('location', models.CharField(blank=True, max_length=120, verbose_name='אזור מגורים')),
                ('linkedin', models.URLField(blank=True, verbose_name='LinkedIn')),
                ('github', models.URLField(blank=True, verbose_name='GitHub')),
                ('portfolio', models.URLField(blank=True, verbose_name='Portfolio / Site')),
                ('headline', models.CharField(blank=True, help_text='למשל: Full-Stack Developer (Python/React)', max_length=160, verbose_name='כותרת מקצועית')),
                ('years_experience', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='שנות ניסיון')),
                ('skills', models.TextField(blank=True, verbose_name='מיומנויות (מופרדות בפסיק)')),
                ('languages', models.TextField(blank=True, verbose_name='שפות (מופרדות בפסיק)')),
                ('about', models.TextField(blank=True, verbose_name='על עצמי')),
                ('resume', models.FileField(blank=True, null=True, upload_to='resumes/', verbose_name='קורות חיים (PDF)')),
                ('desired_level', models.CharField(blank=True, choices=[('JUNIOR', 'Junior'), ('MID', 'Mid'), ('SENIOR', 'Senior'), ('INTERN', 'Intern')], max_length=16, verbose_name='רמה רצויה')),
                ('is_open_to_remote', models.BooleanField(default=True, verbose_name='פתוח לעבודה מרחוק')),
                ('desired_salary_nis', models.PositiveIntegerField(blank=True, null=True, verbose_name='שכר מבוקש (₪)')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='seeker_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SeekerExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=160, verbose_name='חברה')),
                ('title', models.CharField(max_length=160, verbose_name='תפקיד')),
                ('start_date', models.DateField(verbose_name='תאריך התחלה')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='תאריך סיום')),
                ('is_current', models.BooleanField(default=False, verbose_name='משרה נוכחית')),
                ('description', models.TextField(blank=True, verbose_name='תיאור/הישגים')),
                ('tech_stack', models.CharField(blank=True, max_length=300, verbose_name='סטאק טכנולוגי (פסיקים)')),
                ('seeker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiences', to='accounts.seekerprofile')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='SeekerEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school', models.CharField(max_length=160, verbose_name='מוסד לימודים')),
                ('degree', models.CharField(max_length=160, verbose_name='תואר/מסלול')),
                ('start_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='שנת התחלה')),
                ('end_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='שנת סיום')),
                ('notes', models.CharField(blank=True, max_length=300, verbose_name='הערות')),
                ('seeker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education', to='accounts.seekerprofile')),
            ],
            options={
                'ordering': ['-end_year', '-start_year'],
            },
        ),
        migrations.DeleteModel(
            name='HR',
        ),
        migrations.DeleteModel(
            name='JobSeeker',
        ),
        migrations.DeleteModel(
            name='UserProfile',
        ),
    ]
